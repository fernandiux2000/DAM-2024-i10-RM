version: '3.8'

services:
  # MySQL Database
  mysql_db:
    image: mysql:8
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: DAM
    ports:
      - "3306:3306"
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dam_network

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql_db
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8080:80"
    depends_on:
      - mysql_db
    networks:
      - dam_network

  # Backend
  backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    container_name: node_backend
    working_dir: /app
    volumes:
      - ./src/backend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    command: >
      sh -c "while ! mysqladmin ping -h mysql_db --silent; do echo 'Esperando a MySQL...'; sleep 2; done; node server.js"
    depends_on:
      mysql_db:
        condition: service_healthy
    networks:
      - dam_network

  # Frontend
  frontend:
    build:
      context: ./src/frontend
    container_name: ionic_frontend
    working_dir: /app
    ports:
      - "8100:4200"
    command: >
      sh -c "npm install && npm run start -- --host=0.0.0.0 --port=4200"
    volumes:
      - ./src/frontend:/app
    networks:
      - dam_network

networks:
  dam_network:
    driver: bridge